---
description: 
globs: 
alwaysApply: true
---
This project is a cross-platform app built on the Flutter framework.

- Use the latest Flutter best practices listed in the official documentation
    - Use the MVVC pattern to separate UI-related logic from data-related logic
- Write and organize code in the same way as the Compass sample app
- Use the following directory structure:
    ```
    lib
    ├─┬─ ui
    │ ├─┬─ core
    │ │ ├─┬─ ui
    │ │ │ └─── <shared widgets>
    │ │ └─── themes
    │ └─┬─ <FEATURE NAME>
    │   ├─┬─ view_model
    │   │ └─── <view_model class>.dart
    │   └─┬─ widgets
    │     ├── <feature name>_screen.dart
    │     └── <other widgets>
    ├─┬─ domain
    │ └─┬─ models
    │   └─── <model name>.dart
    ├─┬─ data
    │ ├─┬─ repositories
    │ │ └─── <repository class>.dart
    │ ├─┬─ services
    │ │ └─── <service class>.dart
    │ └─┬─ model
    │   └─── <api model class>.dart
    ├─── config
    ├─── utils
    ├─── routing
    ├─── main_staging.dart
    ├─── main_development.dart
    └─── main.dart
    ```